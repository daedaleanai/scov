image: golang

golang-1.12:
  image: golang:1.12
  stage: build
  script:
    - go version
    - go build
    - go test 

golang-1.11:
  image: golang:1.11
  stage: build
  script:
    - go version
    - go build
    - go test
    - mkdir dist
    - GOOS=windows GOARCH=amd64 go build
    - mv gcovhtml.exe ./dist/gcovhtml-windows-amd64.exe
    - GOOS=linux GOARCH=amd64 go build
    - mv gcovhtml ./dist/gcovhtml-linux-amd64
    - GOOS=darwin GOARCH=amd64 go build
    - mv gcovhtml ./dist/gcovhtml-darwin-amd64
    - GOOS=freebsd GOARCH=amd64 go build
    - mv gcovhtml ./dist/gcovhtml-freebsd-amd64
    - GOOS=openbsd GOARCH=amd64 go build
    - mv gcovhtml ./dist/gcovhtml-openbsd-amd64
  artifacts:
    paths:
      - dist/gcovhtml-windows-amd64.exe
      - dist/gcovhtml-linux-amd64
      - dist/gcovhtml-darwin-amd64
      - dist/gcovhtml-freebsd-amd64
      - dist/gcovhtml-openbsd-amd64

golang-1.10:
  image: golang:1.10
  stage: build
  script:
    - go version
    - go build
    - go test

golang-1.9:
  image: golang:1.9
  stage: build
  script:
    - go version
    - go build

test:
  image: golang:1.11
  stage: test
  script:
    - go test -coverprofile=cover.out
    - go tool cover -html=cover.out -o=cover.html
  only:
    - master
  artifacts:
    paths:
      - cover.html

example:
  image: gcc:7
  stage: test
  dependencies:
    - golang-1.11
  script:
    - cd ./example && GCOVHTML=../dist/gcovhtml-linux-amd64 make html
  only:
    - master
  artifacts:
    paths:
      - example/*.html
      - example/methods/*.html


pages:
  stage: deploy
  dependencies:
    - test
    - example
  script:
    - mkdir ./public
    - mv cover.html ./public
    - mv example/ ./public
  only:
    - master
  artifacts:
    paths:
      - public
