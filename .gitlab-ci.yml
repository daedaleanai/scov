golang-tagged:
  image: golang
  stage: build
  script:
    - go version
    - go test
    - mkdir dist
    - GOOS=windows GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov.exe ./dist/scov-windows-amd64.exe
    - GOOS=linux GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-linux-amd64
    - GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-darwin-amd64
    - GOOS=freebsd GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-freebsd-amd64
    - GOOS=openbsd GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-openbsd-amd64
  artifacts:
    paths:
      - dist/scov-windows-amd64.exe
      - dist/scov-linux-amd64
      - dist/scov-darwin-amd64
      - dist/scov-freebsd-amd64
      - dist/scov-openbsd-amd64
  only: 
    - tags

golang-1.12:
  image: golang:1.12
  stage: build
  script:
    - go version
    - go build
    - go test 

golang-1.11:
  image: golang:1.11
  stage: build
  script:
    - go version
    - go build
    - go test
  artifacts:
    paths:
      - scov
    expire_in: 1 week

golang-1.10:
  image: golang:1.10
  stage: build
  script:
    - go version
    - go build
    - go test

golang-1.9:
  image: golang:1.9
  stage: build
  script:
    - go version
    - go build

test:
  image: golang:1.11
  stage: test
  script:
    - go test -coverprofile=cover.out
    - go tool cover -html=cover.out -o=cover.html
    - bash <(curl -s https://codecov.io/bash)
  only:
    - master
  artifacts:
    paths:
      - cover.html

example-gcc-7:
  image: gcc:7
  stage: test
  dependencies:
    - golang-1.11
  script:
    - cd ./example
    - SCOV=../scov make text
    - SCOV=../scov make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-gcc-8:
  image: gcc:8
  stage: test
  dependencies:
    - golang-1.11
  script:
    - cd ./example
    - SCOV=../scov make text
    - SCOV=../scov make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-gcc-9:
  image: gcc:9
  stage: test
  dependencies:
    - golang-1.11
  script:
    - cd ./example
    - SCOV=../scov make text
    - SCOV=../scov make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-clang-8:
  stage: test
  dependencies:
    - golang-1.11
  script:
    - cat /etc/*-release
    - echo "deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-8 main" >> /etc/apt/sources.list
    - echo "deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-8 main" >> /etc/apt/sources.list
    - wget -O - --quiet https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    - apt-get update -qq -y
    - apt-get install -qq -y llvm-8 clang-8
    - alias llvm-profdata=llvm-profdata-8
    - alias llvm-cov=llvm-cov-8
    - cd ./example
    - SCOV=../scov CC=clang-8 make text
    - SCOV=../scov CC=clang-8 make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

pages:
  stage: deploy
  dependencies:
    - test
    - example-gcc-8
  script:
    - mkdir ./public
    - mv cover.html ./public
    - mv example/ ./public
  only:
    - master
  artifacts:
    paths:
      - public
