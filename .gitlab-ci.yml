golang-tagged:
  image: golang
  stage: build
  script:
    - go version
    - go test
    - mkdir dist
    - GOOS=windows GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov.exe ./dist/scov-windows-amd64.exe
    - GOOS=linux GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-linux-amd64
    - GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-darwin-amd64
    - GOOS=freebsd GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-freebsd-amd64
    - GOOS=openbsd GOARCH=amd64 go build -ldflags "-X main.versionInformation=`git describe`"
    - mv scov ./dist/scov-openbsd-amd64
  artifacts:
    paths:
      - dist/scov-windows-amd64.exe
      - dist/scov-linux-amd64
      - dist/scov-darwin-amd64
      - dist/scov-freebsd-amd64
      - dist/scov-openbsd-amd64
  only: 
    - tags

golang-1.13:
  image: golang:1.13
  stage: build
  script:
    - go version
    - go build
    - go test

golang-1.12:
  image: golang:1.12
  stage: build
  script:
    - go version
    - go build
    - go test

golang-1.11:
  image: golang:1.11
  stage: build
  script:
    - go version
    - go build
    - go test
    - cd ./behemoth && go build
  artifacts:
    paths:
      - scov
      - behemoth/behemoth
    expire_in: 1 week

golang-1.10:
  image: golang:1.10
  stage: build
  script:
    - go version
    - go build
    - go test

golang-1.9:
  image: golang:1.9
  stage: build
  script:
    - go version
    - go build

golang-1.8:
  image: golang:1.8
  stage: build
  script:
    - go version
    - go build

include:
  template: SAST.gitlab-ci.yml

test:
  image: golang:1.11
  stage: test
  script:
    - go test -coverprofile=cover.out
    - go tool cover -html=cover.out -o=cover.html
    - bash <(curl -s https://codecov.io/bash)
    - go vet
    - go get -u github.com/gordonklaus/ineffassign
    - go install github.com/gordonklaus/ineffassign
    - $GOPATH/bin/ineffassign $GOPATH/src/gitlab.com/$CI_PROJECT_PATH
    - go get -u github.com/client9/misspell/cmd/misspell
    - go install github.com/client9/misspell/cmd/misspell
    - $GOPATH/bin/misspell *.go behemoth/*.go
  only:
    - master
  artifacts:
    paths:
      - cover.html

benchmark:
  image: gcc:7
  stage: test
  before_script:
    - apt-get update -qq -y
    - apt-get install -qq -y time lcov
  script:
    - cd behemoth/test
    - make html LOC=10000 && make clean
    - make lcov LOC=10000 && make clean
    - make html LOC=50000 && make clean
    - make lcov LOC=50000 && make clean
  only:
    - master

example-gcc-7:
  image: gcc:7
  stage: test
  dependencies:
    - golang-1.11
  variables:
    SCOV: $CI_PROJECT_DIR/scov
  before_script:
    - wget -q http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
    - tar xfz lcov-1.14.tar.gz
    - PATH=$PATH:`pwd`/lcov-1.14/bin/
  script:
    - cd ./example
    - make example
    - time make text
    - time make html
    - time make lcov
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-gcc-8:
  image: gcc:8
  stage: test
  dependencies:
    - golang-1.11
  variables:
    SCOV: $CI_PROJECT_DIR/scov
  before_script:
    - wget -q http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
    - tar xfz lcov-1.14.tar.gz
    - PATH=$PATH:`pwd`/lcov-1.14/bin/
  script:
    - cd ./example
    - make example
    - time make text
    - time make html
    - time make lcov
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-gcc-9:
  image: gcc:9
  stage: test
  dependencies:
    - golang-1.11
  variables:
    SCOV: $CI_PROJECT_DIR/scov
  script:
    - cd ./example
    - make example
    - time make text
    - time make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-clang-6:
  image: debian:stretch
  stage: test
  dependencies:
    - golang-1.11
  variables:
    CC: clang-6.0
    LLVM_PROFDATA: llvm-profdata-6.0
    LLVM_COV: llvm-cov-6.0
    SCOV: $CI_PROJECT_DIR/scov
  before_script:
    - cat /etc/*-release
    - apt-get update -qq -y
    - apt-get install -qq -y wget gnupg2
    - echo "deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-6.0 main" >> /etc/apt/sources.list
    - echo "deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-6.0 main" >> /etc/apt/sources.list
    - wget -O - --quiet https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    - apt-get update -qq -y
    - apt-get install -qq -y llvm-6.0 clang-6.0 make git
  script:
    - cd ./example
    - make example
    - time make text
    - time make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-clang-7:
  image: debian:stretch
  stage: test
  dependencies:
    - golang-1.11
  variables:
    CC: clang-7
    LLVM_PROFDATA: llvm-profdata-7
    LLVM_COV: llvm-cov-7
    SCOV: $CI_PROJECT_DIR/scov
  before_script:
    - cat /etc/*-release
    - apt-get update -qq -y
    - apt-get install -qq -y wget gnupg2
    - echo "deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-7 main" >> /etc/apt/sources.list
    - echo "deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-7 main" >> /etc/apt/sources.list
    - wget -O - --quiet https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    - apt-get update -qq -y
    - apt-get install -qq -y llvm-7 clang-7 make git
  script:
    - cd ./example
    - make example
    - time make text
    - time make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-clang-8:
  image: debian:buster
  stage: test
  dependencies:
    - golang-1.11
  variables:
    CC: clang-8
    LLVM_PROFDATA: llvm-profdata-8
    LLVM_COV: llvm-cov-8
    SCOV: $CI_PROJECT_DIR/scov
  before_script:
    - cat /etc/*-release
    - apt-get update -qq -y
    - apt-get install -qq -y wget gnupg2
    - echo "deb http://apt.llvm.org/buster/ llvm-toolchain-buster-8 main" >> /etc/apt/sources.list
    - echo "deb-src http://apt.llvm.org/buster/ llvm-toolchain-buster-8 main" >> /etc/apt/sources.list
    - wget -O - --quiet https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    - apt-get update -qq -y
    - apt-get install -qq -y llvm-8 clang-8 make git
  script:
    - cd ./example
    - make example
    - ./example
    - time make text
    - time make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

example-clang-9:
  image: debian:buster
  stage: test
  dependencies:
    - golang-1.11
  variables:
    CC: clang-9
    LLVM_PROFDATA: llvm-profdata-9
    LLVM_COV: llvm-cov-9
    SCOV: $CI_PROJECT_DIR/scov
  before_script:
    - cat /etc/*-release
    - apt-get update -qq -y
    - apt-get install -qq -y wget gnupg2
    - echo "deb http://apt.llvm.org/buster/ llvm-toolchain-buster-9 main" >> /etc/apt/sources.list
    - echo "deb-src http://apt.llvm.org/buster/ llvm-toolchain-buster-9 main" >> /etc/apt/sources.list
    - wget -O - --quiet https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    - apt-get update -qq -y
    - apt-get install -qq -y llvm-9 clang-9 make git
  script:
    - cd ./example
    - make example
    - ./example
    - time make text
    - time make html
  only:
    - master
  artifacts:
    paths:
      - example/*.txt
      - example/*.html
      - example/methods/*.html
    expire_in: 1 week

pages:
  stage: deploy
  dependencies:
    - test
    - example-gcc-8
  script:
    - mkdir ./public
    - mv cover.html ./public
    - mv example/ ./public
  only:
    - master
  artifacts:
    paths:
      - public
